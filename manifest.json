{
  "author": "Di Fan, Niall Bourke",
  "cite": "",
  "command": "python /flywheel/v0/run.py",
  "config": {
    "gpu": {
      "type": "boolean",
      "default": false,
      "description": "Set if running GAMBAS model on GPU"
    },
    "phase": {
      "type": "string",
      "default": "test",
      "description": "Test phase"
    },
    "which_epoch": {
      "type": "string",
      "default": "latest",
      "description": "Which epoch to load"
    },
    "stride_inplane": {
      "type": "integer",
      "default": 32,
      "description": "Stride size in 2D plane"
    },
    "stride_layer": {
      "type": "integer",
      "default": 32,
      "description": "Stride size in z direction"
    }
  },
  "custom": {
    "analysis-level": "participant",
    "flywheel": {
      "classification": {
        "components": [],
        "keywords": [
          "super-resolution",
          "volume",
          "template"
        ],
        "modality": [
          "MR"
        ],
        "type": [
          "nifti"
        ]
      },
      "suite": "UNITY Apps"
    },
    "gear-builder": {
      "category": "analysis",
      "image": "flywheel/superfield:0.0.1"
    },
    "kcl-app-binary": "app/main.sh",
    "kcl-app-modalities": [
      "anat"
    ],
    "license": {
      "dependencies": [],
      "main": {
        "name": "",
        "url": ""
      },
      "non-commercial-use-only": false
    }
  },
  "description": "Generalised-Hilbert Mamba for Super-resolution of Paediatric Ultra-Low-Field MRI. GPU enabled runs will run the GAMBAS model on the input image to generate a super-resolved image. CPU runs will be slower and have slightly degraded performance and is based of a Residual Convolution Network model. The model is based on the U-Net architecture and is trained on a dataset of paediatric ultra-low-field MRI images (3 months - 3 years).",
  "environment": {
    "FLYWHEEL": "/flywheel/v0",
    "LANG": "C.UTF-8",
    "PWD": "/flywheel/v0",
    "OS": "Linux",
    "GPG_KEY": "A035C8C19219BA821ECEA86B64E628F8D684696D",
    "PYTHON_SHA256": "2a9920c7a0cd236de33644ed980a13cbbc21058bfdc528febb6081575ed73be3",
    "PATH": "/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
    "PYTHON_VERSION": "3.11.11",
    "LIBRARY_PATH": "/usr/local/cuda/lib64/stubs",
    "NV_CUDA_COMPAT_PACKAGE": "cuda-compat-12-1",
    "NV_LIBCUBLAS_VERSION": "12.1.3.1-1",
    "NV_NVPROF_DEV_PACKAGE": "cuda-nvprof-12-1=12.1.105-1",
    "NV_CUDA_NSIGHT_COMPUTE_VERSION": "12.1.1-1",
    "LD_LIBRARY_PATH": "/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
    "NV_LIBNCCL_PACKAGE_VERSION": "2.17.1-1",
    "NV_LIBCUBLAS_DEV_VERSION": "12.1.3.1-1",
    "NV_LIBNCCL_DEV_PACKAGE_VERSION": "2.17.1-1",
    "NV_LIBNPP_PACKAGE": "libnpp-12-1=12.1.0.40-1",
    "CUDA_VERSION": "12.1.1",
    "NV_NVPROF_VERSION": "12.1.105-1",
    "NV_LIBCUBLAS_PACKAGE_NAME": "libcublas-12-1",
    "NVIDIA_REQUIRE_CUDA": "cuda>=12.1 brand=tesla,driver>=470,driver<471 brand=unknown,driver>=470,driver<471 brand=nvidia,driver>=470,driver<471 brand=nvidiartx,driver>=470,driver<471 brand=geforce,driver>=470,driver<471 brand=geforcertx,driver>=470,driver<471 brand=quadro,driver>=470,driver<471 brand=quadrortx,driver>=470,driver<471 brand=titan,driver>=470,driver<471 brand=titanrtx,driver>=470,driver<471 brand=tesla,driver>=525,driver<526 brand=unknown,driver>=525,driver<526 brand=nvidia,driver>=525,driver<526 brand=nvidiartx,driver>=525,driver<526 brand=geforce,driver>=525,driver<526 brand=geforcertx,driver>=525,driver<526 brand=quadro,driver>=525,driver<526 brand=quadrortx,driver>=525,driver<526 brand=titan,driver>=525,driver<526 brand=titanrtx,driver>=525,driver<526",
    "NVIDIA_DRIVER_CAPABILITIES": "compute,utility",
    "NV_CUDA_LIB_VERSION": "12.1.1-1",
    "NV_LIBCUSPARSE_VERSION": "12.1.0.106-1",
    "NV_LIBNCCL_PACKAGE_NAME": "libnccl2",
    "NV_NVML_DEV_VERSION": "12.1.105-1",
    "NV_LIBNPP_DEV_PACKAGE": "libnpp-dev-12-1=12.1.0.40-1",
    "NV_CUDA_CUDART_VERSION": "12.1.105-1",
    "NVARCH": "x86_64",
    "NV_LIBCUBLAS_PACKAGE": "libcublas-12-1=12.1.3.1-1",
    "NV_LIBCUBLAS_DEV_PACKAGE_NAME": "libcublas-dev-12-1",
    "NV_LIBNCCL_PACKAGE": "libnccl2=2.17.1-1+cuda12.1",
    "NV_LIBCUSPARSE_DEV_VERSION": "12.1.0.106-1",
    "NV_LIBNCCL_DEV_PACKAGE_NAME": "libnccl-dev",
    "NVIDIA_PRODUCT_NAME": "CUDA",
    "NV_CUDA_CUDART_DEV_VERSION": "12.1.105-1",
    "DEBIAN_FRONTEND": "noninteractive",
    "NV_LIBCUBLAS_DEV_PACKAGE": "libcublas-dev-12-1=12.1.3.1-1",
    "NV_CUDA_NSIGHT_COMPUTE_DEV_PACKAGE": "cuda-nsight-compute-12-1=12.1.1-1",
    "NV_LIBNCCL_DEV_PACKAGE": "libnccl-dev=2.17.1-1+cuda12.1",
    "NV_NVTX_VERSION": "12.1.105-1",
    "NV_LIBNPP_VERSION": "12.1.0.40-1",
    "NVIDIA_VISIBLE_DEVICES": "all",
    "NCCL_VERSION": "2.17.1-1",
    "NV_LIBNPP_DEV_VERSION": "12.1.0.40-1"
  },
  "inputs": {
    "api-key": {
      "base": "api-key",
      "read-only": true
    },
    "input": {
      "base": "file",
      "description": "input file (usually axial or isotropic reconstruction)",
      "optional": false
    }
  },
  "label": "Superfield",
  "license": "MIT",
  "maintainer": "Di Fan <difan@chla.usc.edu>",
  "name": "superfield",
  "source": "https://github.com/levente-1/GAMBAS/tree/fw-dev",
  "url": "",
  "version": "0.0.1"
}